{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Inicio","text":"<p>Esta gu\u00eda pretende ayudarte a crear documentaci\u00f3n con la ayuda del generador de sitios est\u00e1ticos \"Mkdocs\" y para mejorar la apariencia haremos uso del tema \"Material\", finalmente veremos como publicar el sitio mediante github pages.</p> <p>No entraremos en mucho detalle acerca de las opciones que ofrece cada una de estas herramientas, simplemente te mostraremos la configuraci\u00f3n que a nosotros m\u00e1s nos agrada, pero es importante que sepas que NO es la \u00fanica forma de dise\u00f1ar tu p\u00e1gina, personalizaci\u00f3n adicional requerir\u00e1 que leas las documentaciones correspondientes, te invitamos a que lo hagas. </p>"},{"location":"#pre-requisitos","title":"Pre-requisitos","text":"<p>En esta gu\u00eda asumieremos que cuentas con el siguiente listado de herramientas, por favor asegurate de contar con cada una de ellas, porque todas son importantes:</p> <ul> <li>Python3 con PIP instalado</li> <li>Una cuenta de Github  </li> <li>Visual Studio Code</li> </ul>"},{"location":"#documentacion","title":"Documentaci\u00f3n","text":"<p>Primero crea tu sitio</p> <p>Despu\u00e9s publica tu sitio</p>"},{"location":"01-Creacion-del-sitio/","title":"01 Creacion del sitio","text":"<ol> <li> <p>Primero debes acceder a tu cuenta de Github, en la ventana de bienvenida debes ubicar la manera de crear un repositorio, a la fecha de creaci\u00f3n de esta gu\u00eda la creaci\u00f3n se realiza desde la secci\u00f3n \"Start Writing Code\" como te se\u00f1alamos en la siguiente imagen. </p> <p></p> </li> <li> <p>Una vez localices el apartado correspondiente deber\u00e1s darle un nombre a tu repositorio (en nuestro caso \"MkDocs\") y seleccionar la visibilidad (en nuestro caso ser\u00e1 un repositorio \"Public\"). En cuanto hayas indicado esos valores da click en el bot\u00f3n \"Create a New Repository\".</p> <p></p> </li> <li> <p>En cuanto crees el repositorio podr\u00e1s acceder al par\u00e1metro que permite clonarlo en nuestro equipo, asegurate que la opci\u00f3n de \"Quick Setup\" tenga seleccionado \"SSH\" y copia el valor correspondiente. </p> <p></p> </li> <li> <p>En tu terminal ejecuta el siguiente comando sustituyendo por tu valor correspondiente.     <pre><code>git clone git@github:&lt;USUARIO&gt;/&lt;REPOSITORIO&gt;.git\n</code></pre></p> <p></p> <p>Una vez se haya copiado el repositorio deberas ver un mensaje como el siguiente.</p> <p></p> </li> <li> <p>Cambia tu directorio de trabajo al del repositorio recien copiado.     <pre><code>cd &lt;Repositorio&gt;\n</code></pre> </p> </li> <li> <p>Crea un entorno virtual mediante el siguiente comando:</p> <p><pre><code>python3 -m venv .venv\n</code></pre> </p> </li> <li> <p>Activa tu entorno virtual con:     <pre><code>source .venv/bin/activate\n</code></pre> </p> </li> <li> <p>Asegurate de tener instalado el gestor <code>pip</code>con:     <pre><code>pip --version\n</code></pre> </p> </li> <li> <p>Instala el generador de sitios con el comando:     <pre><code>pip install mkdocs-material\n</code></pre> </p> <p>Se generar\u00e1 una serie de l\u00edneas con notas de lo que est\u00e1 haciendo el instalador, espera a que termine. </p> <p></p> </li> <li> <p>Abre tu carpeta en el editor VS Code.</p> <p><pre><code>code .\n</code></pre> </p> <p></p> </li> <li> <p>Regresa a tu terminal para generar un nuevo sitio mediante este comando:     <pre><code>mkdocs new .\n</code></pre> </p> <p>Se generar\u00e1 una carpeta llamada docs, con un archivo llamado \"index.md\" y en la ra\u00edz se generar\u00e1 un archivo llamado \"mkdocs.yml\".</p> <p></p> <p></p> </li> <li> <p>Ejecute un servidor temporal mediante el siguiente comando:     <pre><code>mkdocs serve\n</code></pre> </p> <p></p> </li> <li> <p>Visite el sitio que indic\u00f3 su consola, generalmente ser\u00e1 http://172.0.0.1:8000/ </p> </li> <li>A\u00f1ada el tema \"material\" en su archivo <code>mkdocs.yml</code>.   </li> <li> <p>Actualice el sitio y vea el nuevo formato.   </p> </li> <li> <p>Detenga la ejecuci\u00f3n del servidor y copie el siguiente contenido en su archivo <code>mkdocs.yml</code></p> </li> </ol> <pre><code>site_name: Ejemplo documentaci\u00f3n usando MKDocs y Material\n#site_url: https://dominio.tld \ntheme:\n  name: material\n  #logo: assets/tu_logo.png\n  #favicon: assets/tu_logo.png\n  features:\n    - navigation.tabs\n    - navigation.sections\n    - navigation.expand\n    - toc.integrate\n    - navigation.top\n    - search.suggest\n    - search.highlight\n    - content.tabs.link\n    - content.code.annotation\n    - content.code.copy\n  language: es\n  palette:\n    - scheme: default\n      toggle:\n        icon: material/toggle-switch-off-outline \n        name: Switch to dark mode\n      primary: pink\n      accent: red \n    - scheme: slate \n      toggle:\n        icon: material/toggle-switch\n        name: Switch to light mode    \n      primary: pink\n      accent: pink\n\nplugins:\n  - social\n  - search\n\nextra:\n  social:\n    - icon: fontawesome/brands/discord\n      link: https://discord.gg/FVCW5mBQVs\n    - icon: fontawesome/brands/github-alt\n      link: https://github.com/LPUMOGO22\n    - icon: fontawesome/brands/linkedin\n      link: https://www.linkedin.com/in/mora-g\u00f3mez-luis-enrique-5a7411221/\n\nmarkdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - admonition\n  - pymdownx.arithmatex:\n      generic: true\n  - footnotes\n  - pymdownx.details\n  - pymdownx.superfences\n  - pymdownx.mark\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:materialx.emoji.to_svg\n\ncopyright: |\n\nextra_javascript:\n  - javascripts/mathjax.js\n  - https://polyfill.io/v3/polyfill.min.js?features=es6\n  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\n</code></pre> <ol> <li> <p>Ejecute el siguiente comando en su terminal     <pre><code>pip install \"mkdocs-material[imaging]\"\n</code></pre> </p> </li> <li> <p>Vuelva a habilitar el servidor:     <pre><code>mkdocs serve\n</code></pre></p> </li> <li> <p>Su sitio deber\u00eda verse as\u00ed:</p> <p></p> </li> </ol>"},{"location":"02-Publica-el-sitio-en-Github-Pages/","title":"02 Publica el sitio en Github Pages","text":"<ol> <li> <p>Crea el directorio <code>.github</code> a nivel ra\u00edz del proyecto.</p> <p><pre><code>mkdir .github\n</code></pre> </p> </li> <li> <p>Crea el directorio <code>workflows</code> dentro de <code>.github</code>.</p> <p><pre><code>mkdir .github/workflows\n</code></pre> </p> </li> <li> <p>Crea el fichero <code>ci.yml</code> dentro de <code>workflows</code>.     <pre><code>touch .github/workflows/ci.yml\n</code></pre> </p> <p>Deber\u00edas poder ver la siguiente estructura en tu editor de c\u00f3digo:</p> <p> </p> </li> <li> <p>Copia el siguiente c\u00f3digo en el fichero <code>ci.yml</code> para automatizar la compilaci\u00f3n y despliegue de tu sitio cada que hagas un <code>push</code>a github. </p> <pre><code>name: ci \non:\n    push:\n        branches:\n            - master \n            - main\npermissions:\n    contents: write\njobs:\n    deploy:\n        runs-on: ubuntu-latest\n        steps:\n            - uses: actions/checkout@v3\n            - uses: actions/setup-python@v4\n              with:\n                python-version: 3.x\n            - uses: actions/cache@v2\n              with:\n                key: ${{ github.ref }}\n                path: .cache\n            - run: pip install mkdocs-material\n            - run: pip install pillow cairosvg\n            - run: mkdocs gh-deploy --force\n</code></pre> </li> <li> <p>A\u00f1ade el contenido a los archivos que rastrea github con el siguiente comando:</p> <pre><code>git add -A\n</code></pre> </li> <li> <p>Realiza un commit del estado actual de tu sitio:</p> <pre><code>git commit -m \"A\u00f1adiendo la configuraci\u00f3n inicial para mkdocs\"\n</code></pre> </li> <li> <p>Manda tu versi\u00f3n a github:</p> <pre><code>git push origin main\n</code></pre> </li> <li> <p>Dirigete al repositorio en Github</p> <p></p> </li> <li> <p>Da click en el apartado \"settings\".</p> <p></p> </li> <li> <p>En el men\u00fa lateral busca la opci\u00f3n \"pages\".</p> <p></p> </li> <li> <p>Ya en Github Pages en el apartado \"Branch\" selecciona la opci\u00f3n <code>gh-pages</code>.</p> <p></p> <p>Una vez seleccionado de click en \"Save\".</p> <p></p> </li> <li> <p>Dirigite a \"Actions\"</p> <p></p> </li> <li> <p>Selecciona el workflow llamado \"ci\" situado en la barra del lateral izquierdo.</p> <p></p> <p>Entra en la acci\u00f3n dando click en el t\u00edtulo</p> <p></p> <p>Da click en el job llamado \"deploy\"</p> <p></p> <p>Despliega el paso \"Run mkdocs gh-deploy --force\"</p> <p></p> <p>Note que en el paso final ver\u00e1 una nota informativa que le dir\u00e1 la URL mediante la cual podr\u00e1 acceder a su sitio. </p> </li> </ol>"}]}